const express = require('express');
const nodemailer = require('nodemailer');
const cors = require('cors');
const dotenv = require('dotenv');

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

// Настройка транспортера для отправки email
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER, // Ваш email
    pass: process.env.EMAIL_PASS, // Пароль приложения (см. ниже)
  },
});

// Эндпоинт для получения данных и отправки email
app.post('/send-rescue-request', async (req, res) => {
  const { species, condition, location, message } = req.body;

  if (!species || !condition || !location) {
    return res.status(400).json({ error: 'Необходимо указать вид, состояние и местоположение' });
  }

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: 'pozitivgame88@gmail.com',
    subject: 'Запрос на спасение птицы',
    text: `
      Вид птицы: ${species}
      Состояние: ${condition}
      Местоположение: ${location}
      Дополнительное сообщение: ${message || 'Нет дополнительного сообщения'}
    `,
  };

  try {
    await transporter.sendMail(mailOptions);
    res.status(200).json({ message: 'Запрос успешно отправлен' });
  } catch (error) {
    console.error('Ошибка отправки email:', error);
    res.status(500).json({ error: 'Ошибка отправки запроса' });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Сервер запущен на порту ${PORT}`);
});